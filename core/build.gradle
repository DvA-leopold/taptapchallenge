apply plugin: "java"

sourceCompatibility = 1.7
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.test.java.srcDirs = [ "test/" ]

eclipse.project {
    name = appName + "-core"
}

/**
 * this is task for working with versioning
 * only one version file is in out multi platform project
 */
ext.versionFile = file('assets\\version\\version.properties')

task loadVersion {
    project.version = readVersion()
}

ProjectVersion readVersion() {
    logger.quiet 'Reading the version file.'

    if (!versionFile.exists()) {
        throw new GradleException("Required version file does not exit: $versionFile.canonicalPath")
    }

    Properties versionProps = new Properties()

    versionFile.withInputStream { stream ->
        versionProps.load(stream)
    }

    new ProjectVersion(versionProps.major.toInteger(), versionProps.minor.toInteger(), versionProps.patch.toInteger())
}

task incrementMajorVersion(group: 'versioning', description: 'Increments project major version.') << {
    String currentVersion = version.toString()
    ++version.major
    version.minor=0
    version.patch=0
    String newVersion = version.toString()
    logger.info "Incrementing major project version: $currentVersion -> $newVersion"

    ant.propertyfile(file: versionFile) {
        entry(key: 'major', type: 'int', operation: '+', value: 1)
        entry(key: 'minor', type: 'int', operation: '=', value: 0)
        entry(key: 'patch', type: 'int', operation: '=', value: 0)
    }
    logger.quiet("current version: " + version.major + " " + version.minor + " " + version.patch)
}

task incrementMinorVersion(group: 'versioning', description: 'Increments project minor version.') << {
    String currentVersion = version.toString()
    ++version.minor
    version.patch=0
    String newVersion = version.toString()
    logger.info "Incrementing minor project version: $currentVersion -> $newVersion"

    ant.propertyfile(file: versionFile) {
        entry(key: 'minor', type: 'int', operation: '+', value: 1)
        entry(key: 'patch', type: 'int', operation: '=', value: 0)
    }
    logger.quiet("current version: " + version.major + " " + version.minor + " " + version.patch)
}

task incrementPatchVersion(group: 'versioning', description: 'Increment project patch version.') << {
    String currentVersion = version.toString()
    ++version.patch
    String newVersion = version.toString()
    logger.info "Increment patch project version: $currentVersion -> $newVersion"

    ant.propertyfile(file: versionFile){
        entry(key: 'patch', type: 'int', operation: '+', value: 1)
    }
    logger.quiet("current version: " + version.major + " " + version.minor + " " + version.patch)
}

class ProjectVersion {
    Integer major
    Integer minor
    Integer patch

    ProjectVersion(Integer major, Integer minor, Integer patch) {
        this.major = major
        this.minor = minor
        this.patch = patch
    }

    @Override
    String toString() {
        "$major.$minor.$patch"
    }
}